extends snippets
extends praktikum

# Time
snippet datum "Insert current time" w
`date +'%d.\,%m.\,%Y'`
endsnippet

snippet noindent "Description" w
%\begin{noindent}
${1:${VISUAL}}
%\end{noindent}
endsnippet

# priority 100
# snippet '(corollary|remark|notation|TODO|question|suggestion|example|definition|theorem)' "Environments" rbi
# \begin{`!p snip.rv = match.group(1)`}${1/.+/[/}$1${1/.+/]/}
# 	${2:${VISUAL}}
# \end{`!p snip.rv = match.group(1)`}
# endsnippet

# Enviroments
snippet cor "Corollary" bi
\begin{corollary}${1/.+/[/}$1${1/.+/]/}
	${2:${VISUAL}}
\end{corollary}
endsnippet

snippet remark "Remark" bi
\begin{remark}${1/.+/[/}$1${1/.+/]/}
	${2:${VISUAL}}
\end{remark}
endsnippet

snippet notation "Notation" bi
\begin{notation}${1/.+/[/}$1${1/.+/]/}
	${2:${VISUAL}}
\end{notation}
endsnippet

snippet T "Todo" b
\begin{Todo}${1/.+/[/}$1${1/.+/]/}
	${2:${VISUAL}}
\end{Todo}
endsnippet

snippet Q "Question" b
\begin{Question}${1/.+/[/}$1${1/.+/]/}
	${2:${VISUAL}}
\end{Question}
endsnippet

snippet S "Suggestion" b
\begin{Suggestion}${1/.+/[/}$1${1/.+/]/}
	${2:${VISUAL}}
\end{Suggestion}
endsnippet

snippet exam "Example" b
\begin{example}${1/.+/[/}$1${1/.+/]/}
	${2:${VISUAL}}
\end{example}
endsnippet

# snippet todo "Todo" b
# \begin{Todo}`!p if t[1]: snip.rv = '['`$1`!p if t[1]: snip.rv = ']'`
# 	${2:${VISUAL}}
# \end{Todo}
# endsnippet

priority 100
snippet proof "Proof" bi
\begin{proof}${1/.+/[/}$1${1/.+/]/}
	${2:${VISUAL}}
\end{proof}
endsnippet

snippet eq{ "Rozlisenie fce podla rozsahov"
\\left\\{
	\\begin{array}{ll}
		${1:#left} & \mbox{pre } ${2:x} ${3:\leq} ${4:x_0} $5
	\\end{array}
\\right.
$0
endsnippet
snippet eqr "Rozsah fce"
\\\\
${1:#left} & \mbox{pre } ${2:x} ${3:\leq} ${4:x_0} $0
endsnippet

snippet cg "center includegraphics"
\\begin{figure}[!ht]
	\\centering
`!p
try:
	if t[1] and float(t[1]) > 1.0:
		snip.rv = '\t\\begin{adjustbox}{center}\n\t'
	else:
		snip.rv = ''
except ValueError:
	pass
`	\\includegraphics[width=${1:1.0}\linewidth]{${2:plot.png}}
`!p
try:
	if t[1] and float(t[1]) > 1.0:
		snip.rv = '\t\\end{adjustbox}\n'
	else:
		snip.rv = ''
except ValueError:
	pass
`	\\caption{${3:Caption}}
	\\label{fig:${4:${2/\.\w+$//}}}
\\end{figure}
${0}
endsnippet

snippet mcg "center multiple includegraphics"
\\begin{figure}[${1:!ht}]
	\\centering
	\\begin{subfigure}[c]{0.45\linewidth}
		\\centering
		\\includegraphics[width=0.95\linewidth]{${2:plot.png}}
		\\caption{${3:Caption}}
		\\label{fig:${4:${2/\.\w+$//}}}
	\\end{subfigure}
	\\begin{subfigure}[c]{0.45\linewidth}
		\\centering
		\\includegraphics[width=0.95\linewidth]{${5:plot.png}}
		\\caption{${6:Caption}}
		\\label{fig:${7:${5/\.\w+$//}}}
	\\end{subfigure}
	\\caption{${8:Caption}}
\\end{figure}
${0}
endsnippet

snippet wg "wrap includegraphics"
\\begin{wrapfigure}{${1:r}}{${2:0.4}\linewidth}
	\\centering
	\\includegraphics[width=${3:0.35}\linewidth]{${4:plot.png}}
	\\caption{${5:#Caption}}
	\\label{fig:${6:${4/\.\w+$//}}}
\\end{wrapfigure}
${0}
endsnippet

snippet table "Table environment" b
\begin{table}[${1:htpb}]
	\centering
	\begin{${4:t}${4/(t)$|(a)$|(.*)/(?1:abular)(?2:rray)/}}{${5:c}}
	$0${5/(?<=.)(c|l|r)|./(?1: & )/g}
	\end{$4${4/(t)$|(a)$|(.*)/(?1:abular)(?2:rray)/}}
	\caption{${2:caption}}
	\label{tab:${3:label}}
\end{table}
endsnippet

snippet mcol "Multicolumn" w
\multicolumn{${2:2}}{${3:c}}{${1:${VISUAL:head}}}
endsnippet
snippet mrow "Multirow" w
\multirow{${2:2}}{${3:*}}{${1:${VISUAL:head}}}
endsnippet
snippet cmid "Cmidrule" w
\cmidrule{${1:1}-${2:2}}
endsnippet

snippet fig "Figure environment" b
\begin{figure}[${2:htpb}]
	\centering
	\includegraphics[width=${3:0.8}\linewidth]{${4:name.ext}}
	\caption{${4/(\w+)\.\w+/\u$1/}$0}%
	\label{fig:${4/(\w+)\.\w+/$1/}}
\end{figure}
endsnippet

snippet floatbarrier "Float Barrier" i
\\FloatBarrier
endsnippet

snippet tit "\textit{}" i
\\textit{${1:${VISUAL}}}${0}
endsnippet
priority 100
snippet bf "\textbf{}" i
\\textbf{${1:${VISUAL}}}${0}
endsnippet
snippet emp "\emph{}" i
\\emph{${1:${VISUAL}}}${0}
endsnippet
snippet emph "\emph{}" i
\\emph{${1:${VISUAL}}}${0}
endsnippet

#Symbols
priority 200
snippet href "\href{}{}" w
\href{${1:URL}}{${2:text}}
endsnippet
priority 100
snippet "[cC]?ref" "\Cref{}" wr
\\Cref{${1}}
endsnippet
snippet cite "\autocite{}" w
\\autocite{${1}}${0}
endsnippet
snippet tri "Triangle" w
\triangle ${0}
endsnippet
snippet pr "\prime" w
\prime ${0}
endsnippet
snippet op "\oplus" w
\oplus ${0}
endsnippet
snippet ot "\otimes" w
\otimes ${0}
endsnippet
snippet an "\angle" w
\angle ${0}
endsnippet
snippet gr "\grad" w
\grad ${0}
endsnippet

snippet color "\textcolor{}" i
\\textcolor{${1:gray}}{${2:${VISUAL}}}${0}
endsnippet

global !p
def zone(offset = 0):
	return vim.eval('v:lua.require("jd.latex").get_zone({})'.format(offset))
def math():
	return zone() == 'math'
	# return vim.eval('v:lua.require("jd.latex").in_mathzone()')
	# return vim.eval('vimtex#syntax#in_mathzone()') == '1'
def comment():
	return zone(-1) == 'comment'
	# return vim.eval('v:lua.require("jd.latex").in_comment()')
	# return vim.eval('vimtex#syntax#in_comment()') == '1'
def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')")
	return x != '0' and y != '0'
endglobal

snippet template "Basic template" b
\documentclass[a4paper]{article}

\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage{textcomp}
\usepackage[slovak]{babel}
\usepackage{amsmath, amssymb}

\begin{document}
	$0
\end{document}
endsnippet

snippet beg "begin{} / end{}" b
\begin{$1}
	$2
\end{$1}
$0
endsnippet

priority 100
context "math()"
snippet ... "ldots" iA
\ldots
endsnippet

snippet enum "Enumerate" b
\begin{enumerate}${1/.+/[/}$1${1/.+/]/}
	\item ${2:${VISUAL}}
\end{enumerate}
endsnippet

snippet eitem "Itemize" b
\begin{itemize}
	\item $0
\end{itemize}
endsnippet

snippet desc "Description" b
\begin{description}
	\item[$1] $0
\end{description}
endsnippet

snippet it "Individual item" b
\item $0`!p vim.command('normal ==')`
endsnippet

priority 100
snippet up "Package" b
\usepackage${1/.+/[/}$1${1/.+/]/}{${2:package}}$0
endsnippet

snippet => "implies" Ai
\Longrightarrow
endsnippet
# \implies

snippet =< "implied by" Ai
\impliedby
endsnippet

priority 100
context "math()"
snippet space "mspace" i
\mspace{${1:1}mu}
endsnippet

priority 10
snippet space "vspace" i
\vspace{${1:1}em}
endsnippet

priority 100
snippet hspace "hspace" i
\hspace{${1:1}em}
endsnippet

context "math()"
snippet iff "iff" Ai
\iff
endsnippet

context "not math() and not comment()"
snippet mk "Math" wA
\(${1:${VISUAL}}\)`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ', ')', '/', ':']:
	snip.rv = ' '
else:
	snip.rv = ''
`$2
endsnippet

context "not math() and not comment()"
snippet dm "Math" wA
\[ ${1:${VISUAL}} \]
endsnippet

snippet eq "equation environment" bA
\\begin{equation} \\label{eq:${1:#label}}
	${2:${VISUAL}}
\\end{equation}
endsnippet

snippet split "split environment" b
\\begin{split}
	${1:${VISUAL}}
\\end{split}
endsnippet

snippet align "align environment" b
\\begin{align}
	${1:${VISUAL}}
\\end{align}
endsnippet

priority 100
snippet "lab(el)?" "Label" ir
\\label{${1}}$0
endsnippet

context "math()"
snippet " /" "Fraction" iA
 \\frac{${VISUAL}${1}}{$2}$0
endsnippet
context "math()"
snippet "/" "Fraction" r
\\frac{${VISUAL}${1}}{$2}$0
endsnippet
context "math()"
snippet ?? "Fraction" iA
/$0
endsnippet

## alternative
# snippet '(([\^_\\]?(\w+|\{[^=]*\}))+)/' "symbol frac" rA

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\\|\^|_)(\{[^=]+\}|\w+))*)/' "symbol frac" rA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
context "math()"
snippet '^.*\)/' "() frac" rA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i-=1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

context "math()"
snippet '([A-Za-z'])(\d)' "auto subscript" rA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`$1}
endsnippet

# snippet sympy "sympyblock " w
# sympy $1 sympy$0
# endsnippet
#
# priority 10000
# snippet 'sympy(.*)sympy' "sympy" r
# `!p
# from sympy import *
# x, y, z, t = symbols('x y z t')
# k, m, n = symbols('k m n', integer=True)
# f, g, h = symbols('f g h', cls=Function)
# init_printing()
# snip.rv = eval('latex(' + match.group(1).replace('\\', '').replace('^', '**').replace('{', '(').replace('}', ')') + ')')
# `
# endsnippet

priority 1000
snippet math "mathematicablock" w
math $1 math$0
endsnippet

priority 10000
snippet 'math(.*)math' "evaluate mathematica" r
`!p
import subprocess
code = 'ToString[' + match.group(1) + ', TeXForm]'
snip.rv = subprocess.check_output(['wolframscript', '-code', code]).decode("utf-8")
`
endsnippet

context "math()"
snippet == "equals" iA
&= $1
endsnippet

context "math()"
snippet =/ "equals" iA
\neq
endsnippet

context "math()"
snippet ~= "simeq" iA
\simeq
endsnippet

context "math()"
snippet ~~ "approx" iA
\approx
endsnippet

context "math()"
snippet ~ "~" i
\sim
endsnippet

context "math()"
snippet \simeq= "~=" iA
\cong $0
endsnippet

context "math()"
snippet != "must equal" iA
\overset{!}{=}
endsnippet

context "math()"
snippet -= "must equal" iA
\equiv $0
endsnippet

context "math()"
snippet +- "plus minus" iA
\pm $0
endsnippet

context "math()"
snippet -+ "minus plus" iA
\mp $0
endsnippet

context "math()"
snippet ceil "ceil" i
\left\lceil $1 \right\rceil $0
endsnippet

context "math()"
snippet floor "floor" i
\left\lfloor $1 \right\rfloor$0
endsnippet

context "math()"
snippet ave "average" i
\left< ${1:${VISUAL}} \right>$0
endsnippet

context "math()"
snippet ubrace "Underbrace" iA
\\underbrace{${1:${VISUAL}}}_{${2}} ${0}
endsnippet

context "math()"
snippet substack "substack" i
\\substack{${1:${VISUAL}}}
endsnippet

context "math()"
snippet subarray "subarray" i
\begin{subarray}{${1:c}}
	${2:${VISUAL}}
\end{subarray}
endsnippet

context "math()"
snippet obrace "Overbrace" iA
\\overbrace{${1:${VISUAL}}}^{${2}} ${0}
endsnippet

context "math()"
snippet oset "\overset{}{}" iA
\\overset{${2:#2}}{${1:${VISUAL}}} ${0}
endsnippet

context "math()"
snippet pmat "pmat" i
\begin{pmatrix} $1 \end{pmatrix} $0
endsnippet

context "math()"
snippet bmat "bmat" i
\begin{bmatrix} $1 \end{bmatrix} $0
endsnippet

context "math()"
snippet () "left( right)" iA
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr "left( right)" i
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr( "left( right)" i
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr| "left| right|" i
\left| ${1:${VISUAL}} \right| $0
endsnippet

snippet lr{ "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

snippet lrb "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

snippet lr[ "left[ right]" i
\left[ ${1:${VISUAL}} \right] $0
endsnippet

snippet lra "leftangle rightangle" i
\left\langle ${1:${VISUAL}} \right\rangle $0
endsnippet

context "math()"
snippet sum "sum" w
\sum_{n=${1:1}}^{${2:\infty}} ${3:a_n z^n}
endsnippet

context "math()"
snippet taylor "taylor" w
\sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
endsnippet

context "math()"
snippet lim "limit" w
\lim_{${1:n} \to ${2:\infty}}
endsnippet

context "math()"
snippet sup "supremum" w
\sup_{${1:x} \in ${2:[a,b]}}
endsnippet

context "math()"
snippet limsup "limsup" w
\limsup_{${1:n} \to ${2:\infty}}
endsnippet

context "math()"
snippet prod "product" w
\prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet

context "math()"
snippet part "d/dx" w
\frac{\partial ${1:V}}{\partial ${2:x}} $0
endsnippet

context "math()"
snippet del "partial" iA
\partial
endsnippet

context "math()"
snippet sr "^2" iA
^{2}
endsnippet

context "math()"
snippet td "to the ... power" iA
^{${1:${VISUAL}}}$0
endsnippet

context "math()"
snippet ^ "superscript" iA
^{${1:${VISUAL}}}$0
endsnippet

context "math()"
snippet rd "to the ... power" iA
^{(${1:${VISUAL}})}$0
endsnippet

context "math()"
snippet _ "subscript" iA
_{${1:${VISUAL}}}$0
endsnippet

context "math()"
snippet ooo "\infty" iA
\infty
endsnippet

snippet rij "mrij" i
(${1:x}_${2:n})_{${3:$2}\\in${4:\\N}}$0
endsnippet

context "math()"
snippet <= "leq" iA
\le
endsnippet

context "math()"
snippet >= "geq" iA
\ge
endsnippet

context "math()"
snippet EE "geq" iA
\exists $0
endsnippet

context "math()"
snippet AA "forall" iA
\forall $0
endsnippet

context "math()"
snippet xnn "xn" iA
x_{n}
endsnippet

context "math()"
snippet ynn "yn" iA
y_{n}
endsnippet

context "math()"
snippet xii "xi" iA
x_{i}
endsnippet

context "math()"
snippet yii "yi" iA
y_{i}
endsnippet

context "math()"
snippet xjj "xj" iA
x_{j}
endsnippet

context "math()"
snippet yjj "yj" iA
y_{j}
endsnippet

context "math()"
snippet xp1 "x" iA
x_{n+1}
endsnippet

context "math()"
snippet R0+ "R0+" iA
\\R_0^+
endsnippet

snippet plot "Plot" w
\begin{figure}[$1]
	\centering
	\begin{tikzpicture}
		\begin{axis}[
			xmin= ${2:-10}, xmax= ${3:10},
			ymin= ${4:-10}, ymax = ${5:10},
			axis lines = middle,
		]
			\addplot[domain=$2:$3, samples=${6:100}]{$7};
		\end{axis}
	\end{tikzpicture}
	\caption{$8}
	\label{${9:$8}}
\end{figure}
endsnippet

snippet nn "Tikz node" w
\node[$5] (${1/[^0-9a-zA-Z]//g}${2}) ${3:at (${4:0,0}) }{$${1}$};
$0
endsnippet

context "math()"
snippet mcal "mathcal" iA
\mathcal{${1:${VISUAL}}}
endsnippet

context "math()"
snippet mfra "mathcal" iA
\mathfrak{${1:${VISUAL}}}
endsnippet

context "math()"
snippet mbb "mathbb" iA
\mathbb{${1:${VISUAL}}}
endsnippet

priority 100
context "math()"
snippet tt "text" iA
\text{${1:${VISUAL}}}$0
endsnippet

priority 200
context "math()"
snippet mtt "mathtt" iA
\mathtt{${1:${VISUAL}}}
endsnippet

context "math()"
snippet mrm "mathrm" iA
\mathrm{${1:${VISUAL}}}
endsnippet

context "math()"
snippet msf "mathsf" iA
\mathsf{${1:${VISUAL}}}
endsnippet

context "math()"
snippet lll "l" iA
\ell
endsnippet

context "math()"
snippet xx "cross" iA
\times
endsnippet

priority 100
context "math()"
snippet ** "cdot" iA
\cdot
endsnippet

priority 100
context "math()"
snippet \cdot* "cdots" iA
\cdots
endsnippet

priority 100
context "math()"
snippet \cdots* "bullet" iA
\bullet
endsnippet
priority 100
context "math()"
snippet \bullets "bullet" iA
\sbullet
endsnippet

priority 100
context "math()"
snippet \cdotd "ddots" iA
\ddots
endsnippet

priority 100
context "math()"
snippet \cdotv "vdots" iA
\vdots
endsnippet

context "math()"
snippet norm "norm" iA
\|$1\|$0
endsnippet

context "math()"
snippet dv "\dv{}{}" w
\\dv{${1:${VISUAL}}}{${2}}
endsnippet

context "math()"
snippet pdv "\pdv{}{}" w
\\pdv{${1:${VISUAL}}}{${2}}
endsnippet

context "math()"
snippet \int "Integral" i
\\int\\limits_{${1}}^{${2}}
endsnippet

context "math()"
snippet ii "Imaginary unit" i
\\iunit
endsnippet

context "math()"
snippet ee "Exponential" i
\\eunit
endsnippet

context "math()"
snippet et "Exponential" i
\\eunit^{${1:${VISUAL}}}
endsnippet

context "math()"
snippet eunit "Exponential" i
eunit^{${1:${VISUAL}}}
endsnippet

priority 100
context "math()"
snippet '(?<!\\)(star|perp|quad|int|nabla|exp)' "\foo" wrA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 200
context "math()"
snippet '(?<!\\)(qquad)' "\ffoo" rA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 100
context "math()"
snippet '(\\?)(sq|sin|cos|arccot|cot|csc|ln|log|dim|odot|det|abs|tilde|dd)' "\foo{}" rA
\\`!p snip.rv = match.group(2)`{${1:${VISUAL}}}
endsnippet

priority 200
context "math()"
snippet '(\\?)(arcsin|arccos|arctan|arccot|arccsc|arcsec)' "\ffoo{}" rA
\\`!p snip.rv = match.group(2)`{${1:${VISUAL}}}
endsnippet

priority 200
context "math()"
snippet wtilde "\tilde{}" iA
\\widetilde{${1:${VISUAL}}}${0}
endsnippet

context "math()"
snippet qq "text with quad around" i
\qq{${1:${VISUAL}}}
endsnippet

priority 300
context "math()"
snippet dint "integral" w
\int_{${1:-\infty}}^{${2:\infty}} ${3:${VISUAL}} $0
endsnippet

priority 100
context "math()"
snippet -> "to" iA
\to $0
endsnippet

priority 100
context "math()"
snippet <- "from" iA
\leftarrow
endsnippet

priority 101
context "math()"
snippet --> "to" iA
\longrightarrow $0
endsnippet

priority 200
context "math()"
snippet \leftarrow> "leftrightarrow" iA
\leftrightarrow $0
endsnippet

priority 200
context "math()"
snippet \le> "leftrightarrow" iA
\Leftrightarrow $0
endsnippet

context "math()"
snippet !> "mapsto" iA
\mapsto $0
endsnippet

context "math()"
snippet invs "inverse" iA
^{-1}
endsnippet

context "math()"
snippet \\\ "setminus" iA
\setminus
endsnippet

context "math()"
snippet >> ">>" iA
\gg
endsnippet

context "math()"
snippet << "<<" iA
\ll
endsnippet

context "math()"
snippet set "set" wA
\\{${1:${VISUAL}}\\}$0
endsnippet

context "math()"
snippet || "mid" iA
\mid
endsnippet

context "math()"
snippet \mid| "middle|" iA
\middle|
endsnippet


context "math()"
snippet cc "subset" iA
\subset
endsnippet

context "math()"
snippet notin "not in " iA
\not\in
endsnippet

context "math()"
snippet inn "in " iA
\in
endsnippet

context "math()"
snippet NN "n" iA
\N
endsnippet

context "math()"
snippet CC "n" iA
\C
endsnippet

snippet Nn "cap" i
\cap
endsnippet

snippet UU "cup" i
\cup
endsnippet

snippet uuu "bigcup" i
\bigcup_{${1:i \in ${2: I}}} $0
endsnippet

snippet nnn "bigcap" i
\bigcap_{${1:i \in ${2: I}}} $0
endsnippet

snippet SUM "Direct sum" i
\bigoplus_{${1:i \in ${2: I}}} $0
endsnippet

snippet PROD "Tensor product" i
\bigotimes_{${1:i \in ${2: I}}} $0
endsnippet

context "math()"
snippet OO "emptyset" iA
\emptyset
endsnippet

context "math()"
snippet RR "real" iA
\R
endsnippet

context "math()"
snippet QQ "Q" iA
\Q
endsnippet

context "math()"
snippet ZZ "Z" iA
\Z
endsnippet

snippet <! "normal" i
\triangleleft
endsnippet

snippet <> "hokje" i
\diamond
endsnippet

context "math()"
snippet box "\boxed{}" i
\\boxed{${1:${VISUAL}}} ${0}
endsnippet

context "math()"
snippet case "cases" w
\begin{cases}
	$1
\end{cases}
endsnippet

snippet SI "SI" i
\SI{${1:${VISUAL}}}{$2}
endsnippet

snippet si "\si{}" w
\si{${1:${VISUAL}}}
endsnippet


snippet bigfun "Big function" i
\begin{align*}
	$1: $2 &\longrightarrow $3 \\\\
	$4 &\longmapsto $1($4) = $0
.\end{align*}
endsnippet

context "math()"
snippet cvec "column vector" i
\begin{pmatrix} ${1:x}_${2:1}\\\\ \vdots\\\\ $1_${2:n} \end{pmatrix}
endsnippet

priority 10
context "math()"
snippet bar "bar" i
\overline{${1:${VISUAL}}}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])bar" "bar" ri
\overline{`!p snip.rv=match.group(1)`}
endsnippet

priority 20
context "math()"
snippet "(?<!\\)ddot" "ddot" riA
\ddot{${1:${VISUAL}}}$0
endsnippet

priority 10
context "math()"
snippet "(?<!\\o)dot" "dot" riA
\dot{${1:${VISUAL}}}$0
endsnippet

# priority 200
# context "math()"
# snippet "(\\?\w+(\{\w+\})?)ddot" "ddot" riA
# \ddot{`!p snip.rv=match.group(1)`}
# endsnippet
#
# priority 90
# context "math()"
# snippet "(\\?\w+(\{\w+\})?)dot" "dot" riA
# \dot{`!p snip.rv=match.group(1)`}
# endsnippet

priority 10
context "math()"
snippet hat "hat" i
\hat{${1:${VISUAL}}}$0
endsnippet

priority 100
context "math()"
snippet "(\\?\w+(\{\w+\})?)hat" "hat" ri
\hat{`!p snip.rv=match.group(1)`}
endsnippet

context "math()"
snippet "vec" "Vector" riA
\bm{${1:${VISUAL}}}$0
endsnippet

context "math()"
snippet "((\\)?([\w'])+(\{\w+\})?)(,\.|\.,)" "Vector postfix" riA
\bm{`!p snip.rv=match.group(1)`}
endsnippet

# \texorpdfstring{What's}{What’s}
